# Bank-Verlag configuration

verlag.apikey.name=
verlag.apikey.value=

# DKB Configuration

# dkb.token.url=https://api.dkb.de/token
dkb.token.consumer_key=
dkb.token.consumer_secret=

# This parameter can avoid situation when during the request token becomes expired.
# For example current_time is 09:33:52 and token_expiration_time is 09:34:00. In such situation
# we can have a chance to get an error of invalid token. To prevent such situation, before
# the request we will check (token_expiration_time - seconds_before_token_expiration) and compare it
# with current_time if (token_expiration_time - seconds_before_token_expiration) less than current_time
# we will request a new token, if (token_expiration_time - seconds_before_token_expiration) more
# or equal than current_time then current token will be used for the request.
# Default value is 60 seconds.
# dkb.token.seconds_before_token_expiration=60

# Santander Configuration

# santander.token.url=https://apigateway-sandbox.api.santander.de/scb-openapis/sx/oauthsos/password/token
santander.token.consumer_key=
santander.token.consumer_secret=
# santander.token.seconds_before_token_expiration=60

# adorsys dynamic sandbox

adorsys.oauth_approach.bank_code=90001001,90001002
adorsys.oauth_approach.header_name=X-OAUTH-PREFERRED
adorsys.oauth_approach.header_value=pre-step,integrated

# Sparda Configuration
sparda.oauth_approach.default_code_verifier=

# Sparkasse Configuration
sparkasse.oauth_approach.default_code_verifier=
