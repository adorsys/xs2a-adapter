name: Develop CI
on:
  push:
    branches:
      - develop

env:
  XS2A_ADAPTER_IMAGE: xs2a-adapter
  OPENSHIFT_REGISTRY: openshift-registry.adorsys.de
  OPENSHIFT_NAMESPACE: xs2a-adapter-dev
  OPENSHIFT_NAMESPACE_INTEG: xs2a-adapter-integ
  SONAR_HOST: https://sonarcloud.io
  SONAR_ORG: adorsys
  SONAR_PRJ_KEY: adorsys_xs2a-adapter

jobs:
  build:
    name: Build project & docker file
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build project
        run: mvn clean verify -B

      - name: Build docker image
        env:
          IMAGE_TAG: test
        run: docker build -t ${{ env.XS2A_ADAPTER_IMAGE }}:${IMAGE_TAG} .

  deploy:
    name: Deploy docker image to the registry
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build project
        run: mvn clean install -B -Dbuild.number=${GITHUB_SHA::7}
        shell: bash

      - name: DEV. Build & deploy docker image
        env:
          OPENSHIFT_IMAGE_NAME: ${{ env.OPENSHIFT_REGISTRY }}/${{ env.OPENSHIFT_NAMESPACE }}/${{ env.XS2A_ADAPTER_IMAGE }}
          IMAGE_TAG: develop
        run: |
          docker login -u image-pusher -p ${{ secrets.OPENSHIFT_TOKEN }} ${{ env.OPENSHIFT_REGISTRY }}
          docker build -t "${OPENSHIFT_IMAGE_NAME}:${IMAGE_TAG}" .
          docker push ${OPENSHIFT_IMAGE_NAME}:${IMAGE_TAG}

      - name: INTEG. Build & deploy docker image
        env:
          OPENSHIFT_IMAGE_NAME: ${{ env.OPENSHIFT_REGISTRY }}/${{ env.OPENSHIFT_NAMESPACE_INTEG }}/${{ env.XS2A_ADAPTER_IMAGE }}
          IMAGE_TAG: develop
        run: |
          docker login -u image-pusher -p ${{ secrets.OPENSHIFT_TOKEN_INTEG }} ${{ env.OPENSHIFT_REGISTRY }}
          docker build -t "${OPENSHIFT_IMAGE_NAME}:${IMAGE_TAG}" .
          docker push ${OPENSHIFT_IMAGE_NAME}:${IMAGE_TAG}

  sonar:
    name: Publish code coverage to Sonar Cloud
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Collect code coverage data
        run: >
          mvn
          clean
          org.jacoco:jacoco-maven-plugin:prepare-agent
          install
          sonar:sonar
          -B
          -Pcoverage
          -Dsonar.host.url=${{ env.SONAR_HOST }}
          -Dsonar.projectKey=${{ env.SONAR_PRJ_KEY }}
          -Dsonar.organization=${{ env.SONAR_ORG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
