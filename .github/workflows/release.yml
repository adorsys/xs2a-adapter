name: Release CI
on:
  push:
    tags:
      - v*

env:
  GPG_EXECUTABLE: ${{ secrets.GPG_EXECUTABLE }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

jobs:
  build:
    name: Publish project artifacts to Maven Central
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build & Publish
        run: |
          export GPG_TTY="$( tty )"
          echo ${{ secrets.GPG_SECRET_KEY }} | base64 --decode | gpg --import --batch --yes
          echo ${{ secrets.GPG_OWNERTRUST }} | base64 --decode | gpg --batch --import-ownertrust --yes
          mvn -ntp --settings scripts/mvn-release-settings.xml \
          -Dhttp.keepAlive=false \
          -Dmaven.wagon.http.pool=false \
          -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 \
          -Prelease -DskipTests -B -U deploy
        shell: bash

  build-and-deploy-docs:
    name: Build and deploy documentation
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - run: chmod +x docs-generator.sh

      - name: Generate Website
        run: ./docs-generator.sh

      - name: Deploy to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./tmp
